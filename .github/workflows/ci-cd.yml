name: CI/CD Pipeline

on:
  push:
    branches: [master, main, dev, staging, feature/*]
  pull_request:
    branches: [master, main, dev, staging]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install black ruff pytest pytest-cov
    
    - name: Set PYTHONPATH for tests  # 添加这一行
      run: echo "PYTHONPATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV
    
    - name: Run tests
      run: |
        python -m pytest tests/ -v --cov=src --cov-report=xml
    
    - name: Code formatting check with Black
      run: |
        black --check src/ tests/
    
    - name: Linting with Ruff
      run: |
        ruff check src/ tests/

  build-staging:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/staging' || github.ref == 'refs/heads/dev'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Build Staging Docker image
      run: |
        docker build -t texture-classification:staging .
    
    - name: Test Staging Docker image
      run: |
        docker run --rm texture-classification:staging --environment staging --help

  build-production:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Build Production Docker image
      run: |
        docker build -t texture-classification:production .
    
    - name: Test Production Docker image
      run: |
        docker run --rm texture-classification:production --environment production --help